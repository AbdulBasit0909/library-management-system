
@page "/forgot-password"
@inject HttpClient Http
@inject Blazored.Toast.Services.IToastService ToastService

<PageTitle>Forgot Password</PageTitle>

<div class="auth-page">
    <div class="auth-card">
        <h3 class="text-center mb-4">Forgot Your Password?</h3>
        <p class="text-center text-muted mb-4">No problem. Enter your email address below and we'll send you a link to reset it.</p>

        <EditForm Model="@model" OnValidSubmit="HandleRequest">
            <DataAnnotationsValidator />
            <div class="mb-3">
                <label class="form-label">Email Address</label>
                <InputText class="form-control" @bind-Value="model.Email" type="email" />
                <ValidationMessage For="@(() => model.Email)" />
            </div>

            <button class="btn btn-primary w-100" type="submit" disabled="@isBusy">
                @if (isBusy)
                {
                    <span class="spinner-border spinner-border-sm"></span>
                    <span> Sending...</span>
                }
                else
                {
                    <span>Send Reset Link</span>
                }
            </button>
        </EditForm>
        <div class="mt-3 text-center">
            <a href="/login">Back to Login</a>
        </div>
    </div>
</div>

@code {
    private ForgotPasswordModel model = new();
    private bool isBusy = false;

    private async Task HandleRequest()
    {
        isBusy = true;

        try
        {
            var response = await Http.PostAsJsonAsync("api/auth/forgot-password", model);

            // We show a success message whether the email exists or not for security
            ToastService.ShowSuccess("If an account with this email exists, a password reset link has been sent.");
        }
        catch (Exception ex)
        {
            ToastService.ShowError("An error occurred while trying to send the reset link.");
        }
        finally
        {
            isBusy = false;
        }
    }

    public class ForgotPasswordModel
    {
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.EmailAddress]
        public string Email { get; set; } = string.Empty;
    }
}