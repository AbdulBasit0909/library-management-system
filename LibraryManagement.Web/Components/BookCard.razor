@using LibraryManagement.Web.Models

<div class="card h-100 shadow-sm book-card">
    <div class="book-card-img-container">
        <img src="@(string.IsNullOrWhiteSpace(Book.CoverImageUrl) ? "images/placeholder.png.jpg" : Book.CoverImageUrl)"
             class="card-img-top book-card-img"
             alt="@Book.Title"
             onerror="this.onerror=null; this.src='images/placeholder.png';" />
    </div>
    <div class="card-body d-flex flex-column">
        <h5 class="card-title">@Book.Title</h5>
        <h6 class="card-subtitle mb-2 text-muted">by @Book.Author</h6>
        <p class="card-text mt-auto">
            <span class="badge @(Book.Quantity > 0 ? "bg-success" : "bg-danger")">
                @(Book.Quantity > 0 ? $"Available ({Book.Quantity})" : "Out of Stock")
            </span>
        </p>
    </div>
    <div class="card-footer bg-white border-0">
        <button class="btn btn-outline-primary w-100" @onclick="OnShowDetailsClicked">
            <i class="bi bi-info-circle-fill"></i> View Details
        </button>
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public Book Book { get; set; }

    [Parameter]
    public EventCallback<Book> OnShowDetails { get; set; }

    private async Task OnShowDetailsClicked()
    {
        await OnShowDetails.InvokeAsync(Book);
    }
}